name: "Run PyInstaller Script"
description: "Run a specified Python script to run PyInstaller."
author: "@edwardkopp"

inputs:
  python-version:
    description: "Python version for environment to set up."
    required: true
    default: "3.12"
  architecture:
    description: "CPU architecture to target."
    required: true
  requirements:
    description: "Path to requirements.txt file."
    required: true
    default: "requirements.txt"
  script:
    description: "Path to Python script to run PyInstaller."
    required: true
  output-directory:
    description: "Path to PyInstaller output directory."
    required: true
    default: "./dist"
  artifact-name:
    description: "Name for artifact to be produced."
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{inputs.python-version}}
        architecture: ${{inputs.architecture}}
    - name: Install PIP packages
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run packaging script
      shell: bash
      run: python ${{inputs.script}}
    - name: Zip package to keep any symlinks
      shell: bash
      run: |
        if [ $RUNNER_OS == "Linux" ] || [ $RUNNER_OS == "macOS" ]
        then
          zip -r dist.zip ${{inputs.output-directory}}
        elif [ $RUNNER_OS == "Windows" ]
        then
          7z a -r dist.zip ${{inputs.output-directory}}
        fi
    - name: Upload packaged output
      uses: actions/upload-artifact@v4
      with:
        name: ${{inputs.artifact-name}}
        path: dist.zip
        compression-level: 0
